plugins {
    id "java"
    id "eclipse"
    id("io.freefair.lombok") version "8.14"
    id "maven-publish"
    id 'org.jreleaser' version '1.17.0'
}

group = 'de.deltatree.pub.apis'
version = project.findProperty('version') ?: System.getenv('VERSION') ?: '1.0.13-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
    withJavadocJar()
    withSourcesJar()
}

dependencies {
	compileOnly 'com.github.hbci4j:hbci4j-core:3.1.88'
	
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.hbci4j:hbci4j-core:3.1.88'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            pom {
                name = 'easyfin'
                description = 'Threadsafe HBCI4JAVA Wrapper for easily accessing your financial accounts so you need no cloud services to do that'
                url = 'https://github.com/deltatree/easyfin'
                inceptionYear = '2024'
                
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                        distribution = 'repo'
                    }
                }
                
                developers {
                    developer {
                        id = 'deltatree'
                        name = 'Alexander Widak'
                        email = 'alexander.widak@deltatree.de'
                    }
                }
                
                scm {
                    connection = 'scm:git:https://github.com/deltatree/easyfin.git'
                    developerConnection = 'scm:git:ssh://github.com/deltatree/easyfin.git'
                    url = 'https://github.com/deltatree/easyfin'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/deltatree/easyfin"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}

jreleaser {
    project {
        description = 'Threadsafe HBCI4JAVA Wrapper for easily accessing your financial accounts so you need no cloud services to do that'
        longDescription = 'Threadsafe HBCI4JAVA Wrapper for easily accessing your financial accounts so you need no cloud services to do that'
        website = 'https://github.com/deltatree/easyfin'
        docsUrl = 'https://github.com/deltatree/easyfin'
        license = 'Apache-2.0'
        copyright = '2024'
        vendor = 'deltatree'
        authors = ['Alexander Widak']
        tags = ['hbci', 'banking', 'finance', 'java']
        java {
            groupId = 'de.deltatree.pub.apis'
            artifactId = 'easyfin'
            version = project.version.toString()
        }
    }
    
    release {
        github {
            overwrite = true
            skipTag = true
            skipRelease = false
            changelog {
                formatted = 'ALWAYS'
                preset = 'conventional-commits'
            }
        }
    }
    
    signing {
        active = 'ALWAYS'
        armored = true
        publicKey = System.getenv('JRELEASER_GPG_PUBLIC_KEY')
        secretKey = System.getenv('JRELEASER_GPG_SECRET_KEY')
        passphrase = System.getenv('JRELEASER_GPG_PASSPHRASE')
        verify = true
    }
    
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    username = System.getenv('JRELEASER_MAVENCENTRAL_USERNAME')
                    password = System.getenv('JRELEASER_MAVENCENTRAL_PASSWORD')
                    stagingRepository('build/staging-deploy')
                    sign = true
                    checksums = true
                    sourceJar = true
                    javadocJar = true
                    retryDelay = 120
                    maxRetries = 10
                    connectTimeout = 20
                    readTimeout = 60
                }
            }
        }
    }
}

// Add task to publish to staging directory before JReleaser deployment
task publishToStaging {
    dependsOn 'publishMavenPublicationToMavenRepository'
    doLast {
        println "Published artifacts to staging directory for JReleaser"
    }
}

// Make jreleaserDeploy depend on publishing to staging
tasks.named('jreleaserDeploy') {
    dependsOn 'publishToStaging'
}

